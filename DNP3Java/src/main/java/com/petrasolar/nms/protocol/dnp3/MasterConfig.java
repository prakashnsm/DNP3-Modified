/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.9
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.petrasolar.nms.protocol.dnp3;

public class MasterConfig {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected MasterConfig(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(MasterConfig obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        javadnp3JNI.delete_MasterConfig(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public MasterConfig() {
    this(javadnp3JNI.new_MasterConfig(), true);
  }

  public void AddExceptionScan(int aClassMask, long aPeriod) {
    javadnp3JNI.MasterConfig_AddExceptionScan(swigCPtr, this, aClassMask, aPeriod);
  }

  public void setFragSize(long value) {
    javadnp3JNI.MasterConfig_FragSize_set(swigCPtr, this, value);
  }

  public long getFragSize() {
    return javadnp3JNI.MasterConfig_FragSize_get(swigCPtr, this);
  }

  public void setVtoWriterQueueSize(long value) {
    javadnp3JNI.MasterConfig_VtoWriterQueueSize_set(swigCPtr, this, value);
  }

  public long getVtoWriterQueueSize() {
    return javadnp3JNI.MasterConfig_VtoWriterQueueSize_get(swigCPtr, this);
  }

  public void setUseNonStandardVtoFunction(boolean value) {
    javadnp3JNI.MasterConfig_UseNonStandardVtoFunction_set(swigCPtr, this, value);
  }

  public boolean getUseNonStandardVtoFunction() {
    return javadnp3JNI.MasterConfig_UseNonStandardVtoFunction_get(swigCPtr, this);
  }

  public void setAllowTimeSync(boolean value) {
    javadnp3JNI.MasterConfig_AllowTimeSync_set(swigCPtr, this, value);
  }

  public boolean getAllowTimeSync() {
    return javadnp3JNI.MasterConfig_AllowTimeSync_get(swigCPtr, this);
  }

  public void setDoUnsolOnStartup(boolean value) {
    javadnp3JNI.MasterConfig_DoUnsolOnStartup_set(swigCPtr, this, value);
  }

  public boolean getDoUnsolOnStartup() {
    return javadnp3JNI.MasterConfig_DoUnsolOnStartup_get(swigCPtr, this);
  }

  public void setEnableUnsol(boolean value) {
    javadnp3JNI.MasterConfig_EnableUnsol_set(swigCPtr, this, value);
  }

  public boolean getEnableUnsol() {
    return javadnp3JNI.MasterConfig_EnableUnsol_get(swigCPtr, this);
  }

  public void setUnsolClassMask(int value) {
    javadnp3JNI.MasterConfig_UnsolClassMask_set(swigCPtr, this, value);
  }

  public int getUnsolClassMask() {
    return javadnp3JNI.MasterConfig_UnsolClassMask_get(swigCPtr, this);
  }

  public void setIntegrityRate(long value) {
    javadnp3JNI.MasterConfig_IntegrityRate_set(swigCPtr, this, value);
  }

  public long getIntegrityRate() {
    return javadnp3JNI.MasterConfig_IntegrityRate_get(swigCPtr, this);
  }

  public void setTaskRetryRate(long value) {
    javadnp3JNI.MasterConfig_TaskRetryRate_set(swigCPtr, this, value);
  }

  public long getTaskRetryRate() {
    return javadnp3JNI.MasterConfig_TaskRetryRate_get(swigCPtr, this);
  }

  public void setMScans(VectorOfExceptionScan value) {
    javadnp3JNI.MasterConfig_mScans_set(swigCPtr, this, VectorOfExceptionScan.getCPtr(value), value);
  }

  public VectorOfExceptionScan getMScans() {
    long cPtr = javadnp3JNI.MasterConfig_mScans_get(swigCPtr, this);
    return (cPtr == 0) ? null : new VectorOfExceptionScan(cPtr, false);
  }

  public void setMpObserver(IStackObserver value) {
    javadnp3JNI.MasterConfig_mpObserver_set(swigCPtr, this, IStackObserver.getCPtr(value), value);
  }

  public IStackObserver getMpObserver() {
    long cPtr = javadnp3JNI.MasterConfig_mpObserver_get(swigCPtr, this);
    return (cPtr == 0) ? null : new IStackObserver(cPtr, false);
  }

}
