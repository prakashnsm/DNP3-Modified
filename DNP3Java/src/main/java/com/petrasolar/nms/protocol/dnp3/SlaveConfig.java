/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.9
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.petrasolar.nms.protocol.dnp3;

public class SlaveConfig {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected SlaveConfig(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(SlaveConfig obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        javadnp3JNI.delete_SlaveConfig(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public SlaveConfig() {
    this(javadnp3JNI.new_SlaveConfig(), true);
  }

  public void setMMaxControls(long value) {
    javadnp3JNI.SlaveConfig_mMaxControls_set(swigCPtr, this, value);
  }

  public long getMMaxControls() {
    return javadnp3JNI.SlaveConfig_mMaxControls_get(swigCPtr, this);
  }

  public void setMDisableUnsol(boolean value) {
    javadnp3JNI.SlaveConfig_mDisableUnsol_set(swigCPtr, this, value);
  }

  public boolean getMDisableUnsol() {
    return javadnp3JNI.SlaveConfig_mDisableUnsol_get(swigCPtr, this);
  }

  public void setMUnsolMask(ClassMask value) {
    javadnp3JNI.SlaveConfig_mUnsolMask_set(swigCPtr, this, ClassMask.getCPtr(value), value);
  }

  public ClassMask getMUnsolMask() {
    long cPtr = javadnp3JNI.SlaveConfig_mUnsolMask_get(swigCPtr, this);
    return (cPtr == 0) ? null : new ClassMask(cPtr, false);
  }

  public void setMAllowTimeSync(boolean value) {
    javadnp3JNI.SlaveConfig_mAllowTimeSync_set(swigCPtr, this, value);
  }

  public boolean getMAllowTimeSync() {
    return javadnp3JNI.SlaveConfig_mAllowTimeSync_get(swigCPtr, this);
  }

  public void setMTimeSyncPeriod(long value) {
    javadnp3JNI.SlaveConfig_mTimeSyncPeriod_set(swigCPtr, this, value);
  }

  public long getMTimeSyncPeriod() {
    return javadnp3JNI.SlaveConfig_mTimeSyncPeriod_get(swigCPtr, this);
  }

  public void setMUnsolPackDelay(long value) {
    javadnp3JNI.SlaveConfig_mUnsolPackDelay_set(swigCPtr, this, value);
  }

  public long getMUnsolPackDelay() {
    return javadnp3JNI.SlaveConfig_mUnsolPackDelay_get(swigCPtr, this);
  }

  public void setMUnsolRetryDelay(long value) {
    javadnp3JNI.SlaveConfig_mUnsolRetryDelay_set(swigCPtr, this, value);
  }

  public long getMUnsolRetryDelay() {
    return javadnp3JNI.SlaveConfig_mUnsolRetryDelay_get(swigCPtr, this);
  }

  public void setMMaxFragSize(long value) {
    javadnp3JNI.SlaveConfig_mMaxFragSize_set(swigCPtr, this, value);
  }

  public long getMMaxFragSize() {
    return javadnp3JNI.SlaveConfig_mMaxFragSize_get(swigCPtr, this);
  }

  public void setMVtoWriterQueueSize(long value) {
    javadnp3JNI.SlaveConfig_mVtoWriterQueueSize_set(swigCPtr, this, value);
  }

  public long getMVtoWriterQueueSize() {
    return javadnp3JNI.SlaveConfig_mVtoWriterQueueSize_get(swigCPtr, this);
  }

  public void setMEventMaxConfig(EventMaxConfig value) {
    javadnp3JNI.SlaveConfig_mEventMaxConfig_set(swigCPtr, this, EventMaxConfig.getCPtr(value), value);
  }

  public EventMaxConfig getMEventMaxConfig() {
    long cPtr = javadnp3JNI.SlaveConfig_mEventMaxConfig_get(swigCPtr, this);
    return (cPtr == 0) ? null : new EventMaxConfig(cPtr, false);
  }

  public void setMStaticBinary(GrpVar value) {
    javadnp3JNI.SlaveConfig_mStaticBinary_set(swigCPtr, this, GrpVar.getCPtr(value), value);
  }

  public GrpVar getMStaticBinary() {
    long cPtr = javadnp3JNI.SlaveConfig_mStaticBinary_get(swigCPtr, this);
    return (cPtr == 0) ? null : new GrpVar(cPtr, false);
  }

  public void setMStaticAnalog(GrpVar value) {
    javadnp3JNI.SlaveConfig_mStaticAnalog_set(swigCPtr, this, GrpVar.getCPtr(value), value);
  }

  public GrpVar getMStaticAnalog() {
    long cPtr = javadnp3JNI.SlaveConfig_mStaticAnalog_get(swigCPtr, this);
    return (cPtr == 0) ? null : new GrpVar(cPtr, false);
  }

  public void setMStaticCounter(GrpVar value) {
    javadnp3JNI.SlaveConfig_mStaticCounter_set(swigCPtr, this, GrpVar.getCPtr(value), value);
  }

  public GrpVar getMStaticCounter() {
    long cPtr = javadnp3JNI.SlaveConfig_mStaticCounter_get(swigCPtr, this);
    return (cPtr == 0) ? null : new GrpVar(cPtr, false);
  }

  public void setMStaticSetpointStatus(GrpVar value) {
    javadnp3JNI.SlaveConfig_mStaticSetpointStatus_set(swigCPtr, this, GrpVar.getCPtr(value), value);
  }

  public GrpVar getMStaticSetpointStatus() {
    long cPtr = javadnp3JNI.SlaveConfig_mStaticSetpointStatus_get(swigCPtr, this);
    return (cPtr == 0) ? null : new GrpVar(cPtr, false);
  }

  public void setMEventBinary(GrpVar value) {
    javadnp3JNI.SlaveConfig_mEventBinary_set(swigCPtr, this, GrpVar.getCPtr(value), value);
  }

  public GrpVar getMEventBinary() {
    long cPtr = javadnp3JNI.SlaveConfig_mEventBinary_get(swigCPtr, this);
    return (cPtr == 0) ? null : new GrpVar(cPtr, false);
  }

  public void setMEventAnalog(GrpVar value) {
    javadnp3JNI.SlaveConfig_mEventAnalog_set(swigCPtr, this, GrpVar.getCPtr(value), value);
  }

  public GrpVar getMEventAnalog() {
    long cPtr = javadnp3JNI.SlaveConfig_mEventAnalog_get(swigCPtr, this);
    return (cPtr == 0) ? null : new GrpVar(cPtr, false);
  }

  public void setMEventCounter(GrpVar value) {
    javadnp3JNI.SlaveConfig_mEventCounter_set(swigCPtr, this, GrpVar.getCPtr(value), value);
  }

  public GrpVar getMEventCounter() {
    long cPtr = javadnp3JNI.SlaveConfig_mEventCounter_get(swigCPtr, this);
    return (cPtr == 0) ? null : new GrpVar(cPtr, false);
  }

  public void setMEventVto(GrpVar value) {
    javadnp3JNI.SlaveConfig_mEventVto_set(swigCPtr, this, GrpVar.getCPtr(value), value);
  }

  public GrpVar getMEventVto() {
    long cPtr = javadnp3JNI.SlaveConfig_mEventVto_get(swigCPtr, this);
    return (cPtr == 0) ? null : new GrpVar(cPtr, false);
  }

  public void setMpObserver(IStackObserver value) {
    javadnp3JNI.SlaveConfig_mpObserver_set(swigCPtr, this, IStackObserver.getCPtr(value), value);
  }

  public IStackObserver getMpObserver() {
    long cPtr = javadnp3JNI.SlaveConfig_mpObserver_get(swigCPtr, this);
    return (cPtr == 0) ? null : new IStackObserver(cPtr, false);
  }

}
